リストの並べ替えによるデータの整理は、コンピュータサイエンスの重要な側面であり、データの分析や活用において様々なアプリケーションの有効性を大きく向上させることができます。表のランキング、出席者名簿の整理、カレンダーの日付の昇順、クラブメンバーの名前のアルファベット順の整理などがこれにあたります。


まずはライブラリを使ったリストのソートを学習しましょう。多くのプログラミング言語には、配列の要素を昇順や降順に簡単に並べ替えることができる関数やライブラリが組み込まれています。例えば Python では、sorted() 関数を使って配列をソートできます。また、ソートされた新しい配列を作成せずにその場で配列をソートしたい場合は、sort() メソッドを使用できます。

function printArray(intArr){
    let outputString = "[";
    for (let i = 0; i < intArr.length; i++) {
        outputString += intArr[i] + " ";
    }
    console.log(outputString + "]");
}

let arr = [34,4546,32,3,2,8,6,76,56,45,34,566,1];
printArray(arr);

// sort メソッドは状態を更新します。配列をソートします
// 配列に sort メソッドを使うと、配列内の文字列が文字コード順に並び替えられます
// 数値順に並べ替える場合は、比較関数を使用します
// JavaScript では関数を入力として扱うことができます。JavaScript のソートは比較関数を使用して、どのような並べ方をするかを判断します。
// 詳しくは上級のラムダ関数で学習するので、今は理解しなくても問題ありません。

// 具体的な処理として、最初は 34 - 4546 を計算して、負の数が返されるため、4546 を 30 より後に配置するようなイメージです
// 配列内の値を順々に関数の x と y のパラメータに渡して位置を並べ替えています
arr.sort(function(a, b){return a-b});
printArray(arr);

// 関数の入力がない時は、文字列のソート方法が使われます
arr.sort();
printArray(arr);

let strArray = ["hello","world","of","hurt"]
strArray.sort();
printArray(strArray);